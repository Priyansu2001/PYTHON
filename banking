import tkinter as tk
from tkinter import messagebox

class BankApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Bank Management System")
        
        # Add components/widgets here
        self.balance = 0
        self.create_widgets()

    def create_widgets(self):
        # Create widgets like labels, buttons, etc.
        tk.Label(self.root, text="Welcome to the Bank Management System").grid(row=0, column=0, columnspan=2)
        
        # Balance display
        tk.Label(self.root, text="Current Balance:").grid(row=1, column=0)
        self.balance_label = tk.Label(self.root, text=str(self.balance))
        self.balance_label.grid(row=1, column=1)
        
        # Deposit Entry
        tk.Label(self.root, text="Deposit Amount:").grid(row=2, column=0)
        self.deposit_entry = tk.Entry(self.root)
        self.deposit_entry.grid(row=2, column=1)
        
        # Deposit Button
        deposit_button = tk.Button(self.root, text="Deposit", command=self.deposit)
        deposit_button.grid(row=3, column=0)
        
        # Withdraw Entry
        tk.Label(self.root, text="Withdraw Amount:").grid(row=4, column=0)
        self.withdraw_entry = tk.Entry(self.root)
        self.withdraw_entry.grid(row=4, column=1)
        
        # Withdraw Button
        withdraw_button = tk.Button(self.root, text="Withdraw", command=self.withdraw)
        withdraw_button.grid(row=5, column=0)

    def deposit(self):
        amount = float(self.deposit_entry.get())
        self.balance += amount
        self.update_balance()

    def withdraw(self):
        amount = float(self.withdraw_entry.get())
        if amount > self.balance:
            messagebox.showwarning("Warning", "Insufficient balance!")
            return
        self.balance -= amount
        self.update_balance()

    def update_balance(self):
        self.balance_label.config(text=str(self.balance))

if __name__ == "__main__":
    root = tk.Tk()
    app = BankApp(root)
    root.mainloop()
